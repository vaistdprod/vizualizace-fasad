/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    media: Media;
    private_media: PrivateMedia;
    categories: Category;
    users: User;
    custom_form_submissions: CustomFormSubmission;
    projects: Project;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    private_media: PrivateMediaSelect<false> | PrivateMediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    custom_form_submissions: CustomFormSubmissionsSelect<false> | CustomFormSubmissionsSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  layout: (
    | FeaturedProjectsBlock
    | WhyChooseUsBlock
    | AboutServicesBlock
    | PartnershipProcessBlock
    | CTASectionBlock
    | PricingPlansBlock
    | GalleryGridBlock
    | ContactSectionBlock
    | FormBlock
    | TeamSectionBlock
    | ContentBlock
    | MediaBlock
    | LandingHeroBlock
    | TrustBadgesBlock
    | BackgroundImageBlock
    | ConversionBlockProps
  )[];
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    /**
     * Comma-separated keywords for SEO (e.g., "fasÃ¡dy, vizualizace, studiofasad.cz")
     */
    keywords?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedProjectsBlock".
 */
export interface FeaturedProjectsBlock {
  title: string;
  description: string;
  afterProjectsText?: string | null;
  primaryButton?: {
    enabled?: boolean | null;
    text?: string | null;
    link?: string | null;
  };
  secondaryButton?: {
    enabled?: boolean | null;
    text?: string | null;
    link?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'featuredProjects';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WhyChooseUsBlock".
 */
export interface WhyChooseUsBlock {
  badgeText: string;
  title: string;
  description: string;
  features?:
    | {
        title: string;
        description: string;
        icon: 'Star' | 'Clock' | 'Settings' | 'Cpu' | 'PiggyBank' | 'Users' | 'Award';
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'whyChooseUs';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AboutServicesBlock".
 */
export interface AboutServicesBlock {
  title: string;
  badgeText?: string | null;
  description: string;
  image: number | Media;
  features?:
    | {
        title: string;
        description: string;
        /**
         * Enter an icon name from Lucide Icons (e.g., "check", "star", "shield")
         */
        icon?: string | null;
        id?: string | null;
      }[]
    | null;
  cta?: {
    enabled?: boolean | null;
    text?: string | null;
    link?: string | null;
  };
  layout: 'imageLeft' | 'imageRight';
  id?: string | null;
  blockName?: string | null;
  blockType: 'aboutServices';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  /**
   * Image description for blind users and search engines. It should be concise and describe the content of the image.
   */
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PartnershipProcessBlock".
 */
export interface PartnershipProcessBlock {
  title: string;
  description: string;
  /**
   * Add up to 4 main steps in the process. Step 3 will be expanded with visualization details.
   */
  steps?:
    | {
        /**
         * Number of this step in the process (1-4)
         */
        number: number;
        title: string;
        description: string;
        icon:
          | 'MessageSquare'
          | 'Lightbulb'
          | 'ImageIcon'
          | 'FileEdit'
          | 'Send'
          | 'CheckCircle'
          | 'Camera'
          | 'Clock'
          | 'CreditCard';
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  /**
   * Details for the visualization process (expanded from step 3)
   */
  vizDetail?: {
    heading?: string | null;
    description?: string | null;
    /**
     * The 3 phases of the visualization process
     */
    phases?:
      | {
          title: string;
          subtitle?: string | null;
          number: number;
          id?: string | null;
        }[]
      | null;
    timeframe?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'partnershipProcess';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTASectionBlock".
 */
export interface CTASectionBlock {
  title: string;
  description: string;
  buttonText: string;
  /**
   * URL for the button
   */
  buttonHref?: string | null;
  buttonVariant?: ('default' | 'outline') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ctaSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PricingPlansBlock".
 */
export interface PricingPlansBlock {
  badgeText?: string | null;
  heading: string;
  description?: string | null;
  buttonText: string;
  /**
   * URL for the call-to-action buttons
   */
  buttonHref?: string | null;
  /**
   * Additional text to display after the pricing table
   */
  afterPricingText?: string | null;
  primaryButton?: {
    enabled?: boolean | null;
    text?: string | null;
    link?: string | null;
  };
  secondaryButton?: {
    enabled?: boolean | null;
    text?: string | null;
    link?: string | null;
  };
  /**
   * Pricing options to display in the table
   */
  options: {
    count: number;
    base: number;
    discount: number;
    final: number;
    fee: number;
    concepts: number;
    series: number;
    adjust: number;
    id?: string | null;
  }[];
  /**
   * Headers for the pricing table columns
   */
  tableHeaders?: {
    service?: string | null;
    concepts?: string | null;
    series?: string | null;
    adjust?: string | null;
    fee?: string | null;
  };
  /**
   * Text labels used in the pricing component
   */
  labels?: {
    discount?: string | null;
    photo?: string | null;
    photos?: string | null;
    currency?: string | null;
    from?: string | null;
    for?: string | null;
  };
  note?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'pricingPlans';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GalleryGridBlock".
 */
export interface GalleryGridBlock {
  badgeText?: string | null;
  heading: string;
  description?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'galleryGrid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactSectionBlock".
 */
export interface ContactSectionBlock {
  badgeText?: string | null;
  heading: string;
  description?: string | null;
  contactTitle?: string | null;
  enableContactContent?: boolean | null;
  contactContent?: string | null;
  contactItems?:
    | {
        icon: 'Mail' | 'Phone' | 'MapPin' | 'Clock' | 'Building';
        label: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contactSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TeamSectionBlock".
 */
export interface TeamSectionBlock {
  title: string;
  description: string;
  team?:
    | {
        name: string;
        role: string;
        email: string;
        phone: string;
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'teamSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LandingHeroBlock".
 */
export interface LandingHeroBlock {
  title: string;
  description: string;
  primaryButtonText: string;
  /**
   * URL for the primary button
   */
  primaryButtonHref?: string | null;
  /**
   * Optional secondary button text. If left empty, no secondary button will be displayed.
   */
  secondaryButtonText?: string | null;
  /**
   * URL for the secondary button
   */
  secondaryButtonHref?: string | null;
  backgroundImage: number | Media;
  /**
   * Text displayed in the badge above the title
   */
  badgeText?: string | null;
  /**
   * Settings for the scroll indicator at the bottom of the hero section
   */
  scrollIndicator?: {
    enabled?: boolean | null;
    text?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'landingHero';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TrustBadgesBlock".
 */
export interface TrustBadgesBlock {
  stats?:
    | {
        value: string;
        label: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'trustBadges';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BackgroundImageBlock".
 */
export interface BackgroundImageBlock {
  backgroundType: 'image' | 'gridPattern' | 'dotPattern';
  image?: (number | null) | Media;
  /**
   * Value between 0 (transparent) and 1 (opaque). Only applies to images.
   */
  opacity?: number | null;
  blocks?:
    | (
        | FeaturedProjectsBlock
        | WhyChooseUsBlock
        | AboutServicesBlock
        | PartnershipProcessBlock
        | CTASectionBlock
        | PricingPlansBlock
        | GalleryGridBlock
        | ContactSectionBlock
        | TeamSectionBlock
        | TrustBadgesBlock
        | ConversionBlockProps
      )[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'backgroundImage';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ConversionBlockProps".
 */
export interface ConversionBlockProps {
  badgeText?: string | null;
  headline: string;
  subheading: string;
  /**
   * Date when the offer expires
   */
  endDate?: string | null;
  /**
   * Original price before discount
   */
  originalPrice?: number | null;
  /**
   * Price after discount
   */
  discountPrice?: string | null;
  /**
   * Percentage of discount (0-100)
   */
  discountPercentage?: number | null;
  currency?: string | null;
  testimonial: {
    quote: string;
    name: string;
    role: string;
    image?: (number | null) | Media;
  };
  trustBadges?:
    | {
        icon: 'ShieldCheck' | 'CheckCircle' | 'Clock';
        text: string;
        id?: string | null;
      }[]
    | null;
  primaryCTA: {
    text: string;
    href: string;
  };
  secondaryCTA: {
    text?: string | null;
    href: string;
  };
  urgencyText?: string | null;
  packageDetails?: {
    title?: string | null;
    features?:
      | {
          text: string;
          id?: string | null;
        }[]
      | null;
    additionalFeeText?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'conversionBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "private_media".
 */
export interface PrivateMedia {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "custom_form_submissions".
 */
export interface CustomFormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  attachments?: (number | PrivateMedia)[] | null;
  accessToken?: string | null;
  expiresAt?: string | null;
  /**
   * Permanent links for attached media (requires token access)
   */
  attachmentLinks?: string | null;
  debugFlag?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * A collection of projects with titles, descriptions, and images.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: number;
  title: string;
  /**
   * URL-friendly identifier for the project (e.g., "realizace-fasady-ostrava").
   */
  slug: string;
  /**
   * Brief description of the project.
   */
  description?: string | null;
  images?:
    | {
        title: string;
        image: number | Media;
        /**
         * Optional caption for the image.
         */
        caption?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Check this box to feature this project on the homepage.
   */
  featured?: boolean | null;
  /**
   * The main image to represent this project (used on homepage).
   */
  featuredImage?: (number | null) | Media;
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'private_media';
        value: number | PrivateMedia;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'custom_form_submissions';
        value: number | CustomFormSubmission;
      } | null)
    | ({
        relationTo: 'projects';
        value: number | Project;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  layout?:
    | T
    | {
        featuredProjects?: T | FeaturedProjectsBlockSelect<T>;
        whyChooseUs?: T | WhyChooseUsBlockSelect<T>;
        aboutServices?: T | AboutServicesBlockSelect<T>;
        partnershipProcess?: T | PartnershipProcessBlockSelect<T>;
        ctaSection?: T | CTASectionBlockSelect<T>;
        pricingPlans?: T | PricingPlansBlockSelect<T>;
        galleryGrid?: T | GalleryGridBlockSelect<T>;
        contactSection?: T | ContactSectionBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        teamSection?: T | TeamSectionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        landingHero?: T | LandingHeroBlockSelect<T>;
        trustBadges?: T | TrustBadgesBlockSelect<T>;
        backgroundImage?: T | BackgroundImageBlockSelect<T>;
        conversionBlock?: T | ConversionBlockPropsSelect<T>;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        keywords?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedProjectsBlock_select".
 */
export interface FeaturedProjectsBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  afterProjectsText?: T;
  primaryButton?:
    | T
    | {
        enabled?: T;
        text?: T;
        link?: T;
      };
  secondaryButton?:
    | T
    | {
        enabled?: T;
        text?: T;
        link?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WhyChooseUsBlock_select".
 */
export interface WhyChooseUsBlockSelect<T extends boolean = true> {
  badgeText?: T;
  title?: T;
  description?: T;
  features?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AboutServicesBlock_select".
 */
export interface AboutServicesBlockSelect<T extends boolean = true> {
  title?: T;
  badgeText?: T;
  description?: T;
  image?: T;
  features?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        id?: T;
      };
  cta?:
    | T
    | {
        enabled?: T;
        text?: T;
        link?: T;
      };
  layout?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PartnershipProcessBlock_select".
 */
export interface PartnershipProcessBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  steps?:
    | T
    | {
        number?: T;
        title?: T;
        description?: T;
        icon?: T;
        image?: T;
        id?: T;
      };
  vizDetail?:
    | T
    | {
        heading?: T;
        description?: T;
        phases?:
          | T
          | {
              title?: T;
              subtitle?: T;
              number?: T;
              id?: T;
            };
        timeframe?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTASectionBlock_select".
 */
export interface CTASectionBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  buttonText?: T;
  buttonHref?: T;
  buttonVariant?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PricingPlansBlock_select".
 */
export interface PricingPlansBlockSelect<T extends boolean = true> {
  badgeText?: T;
  heading?: T;
  description?: T;
  buttonText?: T;
  buttonHref?: T;
  afterPricingText?: T;
  primaryButton?:
    | T
    | {
        enabled?: T;
        text?: T;
        link?: T;
      };
  secondaryButton?:
    | T
    | {
        enabled?: T;
        text?: T;
        link?: T;
      };
  options?:
    | T
    | {
        count?: T;
        base?: T;
        discount?: T;
        final?: T;
        fee?: T;
        concepts?: T;
        series?: T;
        adjust?: T;
        id?: T;
      };
  tableHeaders?:
    | T
    | {
        service?: T;
        concepts?: T;
        series?: T;
        adjust?: T;
        fee?: T;
      };
  labels?:
    | T
    | {
        discount?: T;
        photo?: T;
        photos?: T;
        currency?: T;
        from?: T;
        for?: T;
      };
  note?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GalleryGridBlock_select".
 */
export interface GalleryGridBlockSelect<T extends boolean = true> {
  badgeText?: T;
  heading?: T;
  description?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactSectionBlock_select".
 */
export interface ContactSectionBlockSelect<T extends boolean = true> {
  badgeText?: T;
  heading?: T;
  description?: T;
  contactTitle?: T;
  enableContactContent?: T;
  contactContent?: T;
  contactItems?:
    | T
    | {
        icon?: T;
        label?: T;
        value?: T;
        id?: T;
      };
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TeamSectionBlock_select".
 */
export interface TeamSectionBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  team?:
    | T
    | {
        name?: T;
        role?: T;
        email?: T;
        phone?: T;
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LandingHeroBlock_select".
 */
export interface LandingHeroBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  primaryButtonText?: T;
  primaryButtonHref?: T;
  secondaryButtonText?: T;
  secondaryButtonHref?: T;
  backgroundImage?: T;
  badgeText?: T;
  scrollIndicator?:
    | T
    | {
        enabled?: T;
        text?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TrustBadgesBlock_select".
 */
export interface TrustBadgesBlockSelect<T extends boolean = true> {
  stats?:
    | T
    | {
        value?: T;
        label?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BackgroundImageBlock_select".
 */
export interface BackgroundImageBlockSelect<T extends boolean = true> {
  backgroundType?: T;
  image?: T;
  opacity?: T;
  blocks?:
    | T
    | {
        featuredProjects?: T | FeaturedProjectsBlockSelect<T>;
        whyChooseUs?: T | WhyChooseUsBlockSelect<T>;
        aboutServices?: T | AboutServicesBlockSelect<T>;
        partnershipProcess?: T | PartnershipProcessBlockSelect<T>;
        ctaSection?: T | CTASectionBlockSelect<T>;
        pricingPlans?: T | PricingPlansBlockSelect<T>;
        galleryGrid?: T | GalleryGridBlockSelect<T>;
        contactSection?: T | ContactSectionBlockSelect<T>;
        teamSection?: T | TeamSectionBlockSelect<T>;
        trustBadges?: T | TrustBadgesBlockSelect<T>;
        conversionBlock?: T | ConversionBlockPropsSelect<T>;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ConversionBlockProps_select".
 */
export interface ConversionBlockPropsSelect<T extends boolean = true> {
  badgeText?: T;
  headline?: T;
  subheading?: T;
  endDate?: T;
  originalPrice?: T;
  discountPrice?: T;
  discountPercentage?: T;
  currency?: T;
  testimonial?:
    | T
    | {
        quote?: T;
        name?: T;
        role?: T;
        image?: T;
      };
  trustBadges?:
    | T
    | {
        icon?: T;
        text?: T;
        id?: T;
      };
  primaryCTA?:
    | T
    | {
        text?: T;
        href?: T;
      };
  secondaryCTA?:
    | T
    | {
        text?: T;
        href?: T;
      };
  urgencyText?: T;
  packageDetails?:
    | T
    | {
        title?: T;
        features?:
          | T
          | {
              text?: T;
              id?: T;
            };
        additionalFeeText?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "private_media_select".
 */
export interface PrivateMediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "custom_form_submissions_select".
 */
export interface CustomFormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  attachments?: T;
  accessToken?: T;
  expiresAt?: T;
  attachmentLinks?: T;
  debugFlag?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  images?:
    | T
    | {
        title?: T;
        image?: T;
        caption?: T;
        id?: T;
      };
  featured?: T;
  featuredImage?: T;
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  topBar: {
    phone: string;
    email: string;
  };
  logoSvg?: string | null;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  logoSvg?: string | null;
  companyInfo?:
    | {
        icon: 'Building2' | 'MapPin' | 'Phone' | 'Mail' | 'Clock' | 'Briefcase';
        text: string;
        id?: string | null;
      }[]
    | null;
  footerColumns?:
    | {
        title: string;
        links?:
          | {
              label: string;
              url?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  topBar?:
    | T
    | {
        phone?: T;
        email?: T;
      };
  logoSvg?: T;
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  logoSvg?: T;
  companyInfo?:
    | T
    | {
        icon?: T;
        text?: T;
        id?: T;
      };
  footerColumns?:
    | T
    | {
        title?: T;
        links?:
          | T
          | {
              label?: T;
              url?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'projects';
          value: number | Project;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}